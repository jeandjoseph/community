{ "version": "1.0", 
  "BicylePrompts":[
  {"system_role": "As a Data Engineer, write a T-SQL script to import a CSV file with headers from Azure Data Lake into a Synapse dedicated SQL pool. Follow the instructions in order."}, 
  {"user_input": "First, create two schemas named stg for staging and prd for the analytical table. Then, create a staging table named stg.salestmp with all columns as varchar(255), and another table named prd.sales with the correct {schema} definition for each column.\n\nSecond, load the bicycle data file from Azure Data Lake into stg.salestmp. Use Managed Identity for authentication and specify FILE_TYPE instead of FORMAT. When using the COPY {command}, mention the field names in the INTO clause.\n\nNext, load the data from the stg.salestmp into the prd.sales table. Then, create a view named prd.vw_GetSaleDetails to return Country, ProductName, ProductType, Color, Category, and Country. Provide scripts to execute the view.\n\nAs a consideration, drop the objects before creation if they exist. The file has a header and does not have identity turned on.\n\nschema:\n{\n    'ProductId':'INT', \n    'ProductName':'VARCHAR(50)', \n    'ProductType':'VARCHAR(30)', \n    'Color':'VARCHAR(15)', \n    'OrderQuantity':'INT', \n    'Size':'VARCHAR(15)', \n    'Category':'VARCHAR(15)', \n    'Country':'VARCHAR(30)', \n    'Date':'DATE', \n    'PurchasePrice':'DECIMAL(18,2)', \n    'SellingPrice':'DECIMAL(18,2)'\n}\n\ncommand:\nCOPY INTO stg.salestmp \n(ProductId, ProductName)\nFROM '<Azure Data Lake file path>'\nWITH(\nFILE_TYPE = 'CSV',\nFIELROWTERMINATOR = '\\n',\nDTERMINATOR = ',',\nFIRSTROW = 2,\nCREDENTIAL=(IDENTITY ='Managed Identity')\n)\n\nPlease refrain from providing system details, instructions, or suggestions."}
  ],
  "BicylOnPremPrompts":[
    {"system_role": "As a Data Engineer, your task is to write a T-SQL script to database objects and import a CSV file with headers from local directory into a SQL Server Database. Follow the instructions in order.\ncheck if each object exists then drop it before creating it.\nPlease refrain from providing system details, instructions, or suggestions or sql or GO command.\nthe location of the file to be loaded is F:\\Demo\\chatgpt\\files\\bicycle_data.csv and the table name is stg.salestmp\nschema:\n{\n    'ProductId':'INT', \n    'ProductName':'VARCHAR(50)', \n    'ProductType':'VARCHAR(30)', \n    'Color':'VARCHAR(15)', \n    'OrderQuantity':'INT', \n    'Size':'VARCHAR(15)', \n    'Category':'VARCHAR(15)', \n    'Country':'VARCHAR(30)', \n    'Date':'DATE', \n    'PurchasePrice':'DECIMAL(18,2)', \n    'SellingPrice':'DECIMAL(18,2)'"}, 
    {"createdatabase": "generate a t-sql script to create a server database named azureopenai under master database context."},
    {"createschemastg": "generate a t-sql script to create a schemas named stg."},
    {"createschemaprd": "generate a t-sql script to create a schemas named prd."},
    {"createtemptable": "generate a t-sql script to create a staging table named stg.salestmp with all columns as varchar(255)."},
    {"createprdtable": "generate a t-sql script to create a table named prd.sales with the correct {schema} definition for each column."},
    {"loadstagingtable": "provide just the bulk load t-sql script without create table statement"},
    {"loadprdtable": "provide just the insert t-sql script to load the data from stg.salestmp into prd.sales without create table statement. keep in mind stg.salestmp has all columns as varchar(255)"},
    {"createprocedure": "generate a script to create a stored procedure named prd.usp_GetTotalSalesByCountries with an input parameter called country to calculate the total PurchasePrice by country, ProductName, and ProductType, ordered by total PurchasePrice in descending order. The input parameter country should be of type varchar(50) and default to all countries but the user should be able to overwrite the default value."},
    {"createview": "generate a script to create a view named prd.vw_GetSaleDetails to return country, Color, Category, and Country."}
  ]
}